Learning version 1 by firo 3/20/2012

高二至今，六年时间。学习的内容无论从深度还是宽度都提升了学多。而现在我也要结束校园的生活。原有的学习方式已不能面对现在任务了。
应时而出，新的学习方式。这是我有意识进行的学习方法的改进。
我们需要先描绘下，我们所期待的这种学习能力：
1. 首先，她不再是已记忆为主，而是真正的“理解”，触类旁通，当然记忆的功效是不能抹杀掉的而且作用依然很大，只不过强调学习理解，触类旁通这种能力上了 。
为什么，要提出这样一个目标呢？知识之间本身就具有这样共通的属性，这也让我们培养这种能力成为了一种可能。
另外，由于外界的信息，和自己所需要的信息都增加了许多。所以这样的能力是非常重要的。似乎，这成了一种万能的能力，我也这么认为。
同时，我也认为这种对知识的掌握效果是最好的了。
2. 其次，我们要有对事物、知识分类这种能力。国外的教育学者安德森和国内教育家皮连生对知识做了深刻的分类。
这种能力的重要性，不亚于上面的。因为根据知识的不同本质就决定了我们以什么样的方式，来处理他。
3. 我们在使用这种能力学习新知识的时候，应该是有一种非常愉悦的体验的。而不是空洞，乏味，灌输式的。
4. 当然这种学习方式应是高效的，这和第一点有着千丝万缕的关系。
5. 他要有不断的自我修正机制。
...
暂时就里这么多...


关于知识本身：
1.知识唯一性。知识实际上是人对真实世界的抽象与映射。这种唯一性又分为两类。
1.1抽象原理概念上的唯一，这是一个绝对的存在集合。比如说，操作系统这个概念。
1.2真实世界对基本原理概念的一种实现，或是对真实事物的一种描述。比如说，linux kernel他是有程序员不断编程，修正的。
无论怎么说，他们都能用统一的语言描绘出来，无论是宏观的还是微观。这对于知识的学习与掌握来说是至关重要的。
2.历史性。知识的唯一性，表现出来的可以看作只是在某一刻的状态，而实际上只是在时间上是有连贯，知识从某种意义上来说，是时间的产物。
通过掌握一个知识的起源,发展演化,有利于掌握知识来龙去脉，预见未来。
3.不可或缺性和自相似性，伸缩可察。Indispensable & Self-similarity &telescopic & elastic dataflow 伸缩可观的数据流图。这一点非常重要。
对理解想linux kernel这样复杂系统尤为重要。无论是多么复杂的系统，他的没一个组件，都在其中起着不可或缺的左右，
所以等你发现自己碰到不了解，不理解的时候,你必然迷失在数据流图当中。认识每一部分的作用～～
4.游历性。peregrinate，我始终认为学习就像参观风景区一样的美好感觉。游历性，在上面的数据流图之上，知识给学习者一种良好的感觉。
学习本身的过程就像织毛衣，通过已有的知识编制出将要学习的道路。学习的知识相互促进，不是因为这部分知识本身的难度，而是你缺少关于这部分知识的联系。
5.具体相关性。当我们学到一个知识的时候，往往我们如果能联想到具体的例子。就能很容易理解，明白。因为知识都是源自人们多生活中的事物的，抽象概括、描述映射而成，
所以在学习的过程中应该将知识联系到具体的事物当中。
6.为什么会有它？它的本质是什么？有没有更好的了？

抛开我们学习的内容不谈，那么如何学习呢？怎么样才能处在一个高效的状态。
1 精神高度集中。
2 良好而愉悦的学习体验，不应是灌输式，使人厌烦的。

all in learning
1 通常，我每次学习都是围绕在一个主题下，从书本，最容易反映这一点，主题自然就是章。而当我们脱离书本，独立学习时，就应该自己确定这样的主题。
2 我们应该始终的是自己保持对知识宏观掌控能力。应该说这点是整个学习当中的核心，即明确的“知，知晓，知道”有两种方法：
2.1 正面的从高的角度。在某一层，挑选出关键的概念，元素。组成数据流图。始终明确自己的所在的位置。
2.2 解决掉主题无关的知识，有时他们会造成误导。
应从抽象和具体（也就是实现）来个角度来分别考量这个，游历的路线图。
在绘制这个数据流动的模型流程过程当中,这部分是整个：
1 sub-topic的定义，属性（比如说历史性）。
2 sub-topic的组成部分，各个组成部分，至少从组成上应是独立。
3 要确定各个sub-topic之间的运行流程，数据关系。

































