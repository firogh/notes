

# References
[Reboot Linux faster using kexec](http://web.archive.org/web/20130121033946/http://www.ibm.com/developerworks/linux/library/l-kexec/index.html)
[Kdump on sourcefoge](http://lse.sourceforge.net/kdump/)


Before kernel supported the relocatable, [the kdump users had to compile the capture kernel with different configuration options in order to make it bootable at a different address](https://kernelnewbies.org/Linux_2_6_20#head-3c215483506a27123005168c491eea0f2e5549dd]

[-fPIE "position-independent executable on stackoverflow](http://stackoverflow.com/questions/2463150/fpie-position-independent-executable-option-gcc-ld) states PIE use PC relative relocation rather than PLT.
[OpenBSD's Position Independent](http://www.openbsd.org/papers/nycbsdcon08-pie/mgp00001.html)

[Interpreting readelf -r, in this case R_X86_64_PC32][1]
[Relocations, Relocations][2]


[1]: http://www.mindfruit.co.uk/2012/06/interpreting-readelf-r-in-this-case.html
[2]: http://www.mindfruit.co.uk/2012/06/relocations-relocations.html
[3]: https://gcc.gnu.org/ml/gcc-help/2009-07/msg00351.html
[4]: https://stackoverflow.com/questions/28119365/what-are-the-differences-comparing-pie-pic-code-and-executable-on-64-bit-x86-pl

[fpie vs -fpic][3]
They are also different in whether calls to locally defined functions go through the PLT.
I did a few experiments on this but got nothing on it.
[What are the differences comparing PIE, PIC code and executable on 64-bit x86 platfomr][4]
