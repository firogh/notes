

#Collect debug assist info, reference source
/proc (specially /proc/sys/)

#How to know library dependencies of a bin
LD_TRACE_LOADED_OBJECTS=1 git 
ldd /usr/bin/git
#ldd code tools
LD_TRACE_LOADED_OBJECTS=1  /sbin/netifd  | awk -F '.' '{print $1}'


#Backtrace or stacktrace
=how to find a backtrace
* gdb bt(Strongly, recommand), break continue bt
* backtrace()
* read soucecode
* print log 
=Exit bug
* Use atexit() register a stackdump() function
* gdb, bt
=Runtime function backtrace
* gdb set brakepoint, then bt it
* backtrace() function
=Timer backtrace
* Just funny, the foolish of me. 


=backtrace() funciton code example
* compile with -rdynamic
void print_stacktrace()
{
    int size = 16;
    void * array[16];
    int stack_num = backtrace(array, size);
    char ** stacktrace = backtrace_symbols(array, stack_num);
    for (int i = 0; i < stack_num; ++i)
    {
        printf("%s\n", stacktrace[i]);
    }
    free(stacktrace);
}

#Debug c++
=demangle c++ symbols 
* c++filt command
* addr2line -f -C -a xxx -e ooo

##tips
#signal
This is just a hiwifi wonderful kernel patch #931
echo 1 > /proc/sys/kernel/debug_signals


